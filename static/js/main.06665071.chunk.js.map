{"version":3,"sources":["components/Forms/Form.js","App.js","reportWebVitals.js","index.js"],"names":["Form","state","name","number","handleChange","e","setState","target","value","handleSubmit","preventDefault","obj","props","addNewContact","reset","prodIdName","uuidv4","prodIdNumber","onSubmit","this","htmlFor","id","type","pattern","title","required","onChange","Component","App","contacts","prevState","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6SAGaA,EAAb,4MACEC,MAAQ,CACNC,KAAM,GACNC,OAAQ,IAHZ,EAMEC,aAAe,SAACC,GAEd,EAAKC,SAAL,eACGD,EAAEE,OAAOL,KAAOG,EAAEE,OAAOC,SAThC,EAaEC,aAAe,SAACJ,GACdA,EAAEK,iBAEF,IAAMC,EAAM,CACVT,KAAM,EAAKD,MAAMC,KACjBC,OAAQ,EAAKF,MAAME,QAKrB,EAAKS,MAAMC,cAAcF,GACzB,EAAKG,SAxBT,EA2BEA,MAAQ,WACN,EAAKR,SAAS,CAAEJ,KAAM,GAAIC,OAAQ,MA5BtC,EA+BEY,WAAaC,cA/Bf,EAgCEC,aAAeD,cAhCjB,4CAkCE,WACE,OACE,8BACE,uBAAME,SAAUC,KAAKV,aAArB,UACE,wBAAOW,QAASD,KAAKJ,WAArB,iBAEE,uBACEM,GAAIF,KAAKJ,WACTO,KAAK,OACLpB,KAAK,OACLqB,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRC,SAAUP,KAAKf,kBAInB,wBAAOgB,QAASD,KAAKF,aAArB,mBAEE,uBACEI,GAAIF,KAAKF,aACTK,KAAK,MACLpB,KAAK,SACLqB,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,EACRC,SAAUP,KAAKf,kBAGnB,wBAAQkB,KAAK,SAAb,kCA/DV,GAA0BK,aCEpBC,E,4MACJ3B,MAAQ,CACN4B,SAAU,CACR,CAAER,GAAI,OAAQnB,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEkB,GAAI,OAAQnB,KAAM,iBAAkBC,OAAQ,aAC9C,CAAEkB,GAAI,OAAQnB,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEkB,GAAI,OAAQnB,KAAM,iBAAkBC,OAAQ,e,EAKnDU,cAAc,SAACF,GACd,EAAKL,UAAS,SAACwB,GACb,MAAO,CACLD,SAAS,GAAD,mBAAMC,EAAUD,UAAhB,CAA0BlB,S,4CAKtC,WAEE,OACE,sBAAKoB,UAAU,MAAf,UACE,2CACD,cAAC,EAAD,CAAMlB,cAAeM,KAAKN,uB,GAxBfc,aA8BHC,ICvBAI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.06665071.chunk.js","sourcesContent":["import { Component } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nexport class Form extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    // console.log(e.target.name,e.target.value);\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const obj = {\r\n      name: this.state.name,\r\n      number: this.state.number,\r\n    };\r\n\r\n    //this.setState({ contact });\r\n\r\n    this.props.addNewContact(obj);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  prodIdName = uuidv4();\r\n  prodIdNumber = uuidv4();\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <label htmlFor={this.prodIdName}>\r\n            Name\r\n            <input\r\n              id={this.prodIdName}\r\n              type=\"text\"\r\n              name=\"name\"\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n              required\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n\r\n          <label htmlFor={this.prodIdNumber}>\r\n            Number\r\n            <input\r\n              id={this.prodIdNumber}\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n              required\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n          <button type=\"submit\">Add contact</button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import { Component } from \"react\";\nimport \"./App.css\";\nimport { Form } from \"./components/Forms/Form\"\n\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    \n  };\n\n addNewContact=(obj)=>{\n  this.setState((prevState) => {\n    return {\n      contacts: [...prevState.contacts, obj],\n    };\n  });\n }\n\n  render() {\n    //console.log(this.state.name, this.state.number);\n    return (\n      <div className=\"App\">\n        <h1>Phonebook</h1>\n       <Form addNewContact={this.addNewContact}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}